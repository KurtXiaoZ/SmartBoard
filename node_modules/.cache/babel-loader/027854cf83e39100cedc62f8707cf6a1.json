{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Projects/SmartBoard/src/lib/stateManagement/contexts.js\";\nimport { createContext, useContext } from \"react\";\nimport { pickFromObj } from \"../util\"; // An object that contains all contexts for state management\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const contexts = {\n  CurPosContext: /*#__PURE__*/createContext(),\n  MovementContext: /*#__PURE__*/createContext()\n};\n/**\n * A hook that obtains a Context or parts of it\n * @param {Array.<String>} contexts          identifier of the context\n * @returns values of the context\n */\n\nexport function useFilteredContext(select) {}\n/**\n * Pass Context params to component as props\n * @param {Object} WrappedComponent     react element\n * @param {String} contextKey           key of the target context\n * @param {} properties \n * @returns \n */\n\nexport function connectToContext(WrappedComponent, contextKey) {\n  var _s = $RefreshSig$();\n\n  let properties = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return _s(function (props) {\n    _s();\n\n    const contextProps = useFilteredContext(contextKey, properties);\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...contextProps,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this);\n  }, \"zF5R5+tHvGvcS6hJuS7kvL73/PQ=\", false, function () {\n    return [useFilteredContext];\n  });\n}","map":{"version":3,"names":["createContext","useContext","pickFromObj","contexts","CurPosContext","MovementContext","useFilteredContext","select","connectToContext","WrappedComponent","contextKey","properties","props","contextProps"],"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Projects/SmartBoard/src/lib/stateManagement/contexts.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport { pickFromObj } from \"../util\";\n\n// An object that contains all contexts for state management\nexport const contexts = {\n    CurPosContext: createContext(),\n    MovementContext: createContext(),\n}\n\n/**\n * A hook that obtains a Context or parts of it\n * @param {Array.<String>} contexts          identifier of the context\n * @returns values of the context\n */\nexport function useFilteredContext(select) {\n    \n}\n\n/**\n * Pass Context params to component as props\n * @param {Object} WrappedComponent     react element\n * @param {String} contextKey           key of the target context\n * @param {} properties \n * @returns \n */\nexport function connectToContext(WrappedComponent, contextKey, properties = []){\n    return function(props){\n      const contextProps = useFilteredContext(contextKey, properties);\n      return <WrappedComponent {...contextProps} {...props}/>\n    }\n}"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;;;AACA,OAAO,MAAMC,QAAQ,GAAG;EACpBC,aAAa,eAAEJ,aAAa,EADR;EAEpBK,eAAe,eAAEL,aAAa;AAFV,CAAjB;AAKP;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,kBAAT,CAA4BC,MAA5B,EAAoC,CAE1C;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,gBAA1B,EAA4CC,UAA5C,EAAwE;EAAA;;EAAA,IAAhBC,UAAgB,uEAAH,EAAG;EAC3E,UAAO,UAASC,KAAT,EAAe;IAAA;;IACpB,MAAMC,YAAY,GAAGP,kBAAkB,CAACI,UAAD,EAAaC,UAAb,CAAvC;IACA,oBAAO,QAAC,gBAAD,OAAsBE,YAAtB;MAAA,GAAwCD;IAAxC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAHD;IAAA,QACuBN,kBADvB;EAAA;AAIH"},"metadata":{},"sourceType":"module"}