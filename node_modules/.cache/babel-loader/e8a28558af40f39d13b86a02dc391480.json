{"ast":null,"code":"var _jsxFileName = \"/Users/zechuanxiao/Documents/Vanderbilt/Projects/SmartBoard/src/lib/stateManagement/contexts.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport { pickFromObj } from \"../util\"; // An object that contains all contexts for state management\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const contexts = {\n  Val1Context: /*#__PURE__*/createContext(),\n  Val2Context: /*#__PURE__*/createContext()\n};\n/**\n * A hook that obtain a Context or parts of it\n * @param {String} context          identifier of the context\n * @param {Array.<String>} keys     keys of the targeted part of context\n * @returns values of the context\n */\n\nexport function useFilteredContext(context) {\n  _s();\n\n  let keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const contextObj = useContext(contexts[context]);\n  if (!context && typeof context !== 'string') return {};\n  if (!Array.isArray(keys) || keys.length === 0) return contextObj;\n  return pickFromObj(contextObj, keys);\n}\n\n_s(useFilteredContext, \"CCBnuDAbONqWPCRBY1W0ywxyTC0=\");\n\nexport function connectToContext(WrappedComponent, contextKey, properties) {\n  return function (props) {\n    const selectors = select();\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...selectors,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this);\n  };\n}","map":{"version":3,"names":["createContext","useContext","pickFromObj","contexts","Val1Context","Val2Context","useFilteredContext","context","keys","contextObj","Array","isArray","length","connectToContext","WrappedComponent","contextKey","properties","props","selectors","select"],"sources":["/Users/zechuanxiao/Documents/Vanderbilt/Projects/SmartBoard/src/lib/stateManagement/contexts.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport { pickFromObj } from \"../util\";\n\n// An object that contains all contexts for state management\nexport const contexts = {\n    Val1Context: createContext(),\n    Val2Context: createContext(),\n}\n\n/**\n * A hook that obtain a Context or parts of it\n * @param {String} context          identifier of the context\n * @param {Array.<String>} keys     keys of the targeted part of context\n * @returns values of the context\n */\nexport function useFilteredContext(context, keys = []) {\n    const contextObj = useContext(contexts[context]);\n    if(!context && typeof context !== 'string') return {};\n    if(!Array.isArray(keys) || keys.length === 0) return contextObj;\n    return pickFromObj(contextObj, keys);\n}\n\n\nexport function connectToContext(WrappedComponent, contextKey, properties){\n    return function(props){\n      const selectors = select();\n      return <WrappedComponent {...selectors} {...props}/>\n    }\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;;;AACA,OAAO,MAAMC,QAAQ,GAAG;EACpBC,WAAW,eAAEJ,aAAa,EADN;EAEpBK,WAAW,eAAEL,aAAa;AAFN,CAAjB;AAKP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,kBAAT,CAA4BC,OAA5B,EAAgD;EAAA;;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EACnD,MAAMC,UAAU,GAAGR,UAAU,CAACE,QAAQ,CAACI,OAAD,CAAT,CAA7B;EACA,IAAG,CAACA,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAAlC,EAA4C,OAAO,EAAP;EAC5C,IAAG,CAACG,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAD,IAAwBA,IAAI,CAACI,MAAL,KAAgB,CAA3C,EAA8C,OAAOH,UAAP;EAC9C,OAAOP,WAAW,CAACO,UAAD,EAAaD,IAAb,CAAlB;AACH;;GALeF,kB;;AAQhB,OAAO,SAASO,gBAAT,CAA0BC,gBAA1B,EAA4CC,UAA5C,EAAwDC,UAAxD,EAAmE;EACtE,OAAO,UAASC,KAAT,EAAe;IACpB,MAAMC,SAAS,GAAGC,MAAM,EAAxB;IACA,oBAAO,QAAC,gBAAD,OAAsBD,SAAtB;MAAA,GAAqCD;IAArC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAHD;AAIH"},"metadata":{},"sourceType":"module"}